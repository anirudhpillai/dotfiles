{"scopeName":"source.hs","fileTypes":["hs","hsl"],"firstLineMatch":"^#!.*haskell.*","name":"Haskell","patterns":[{"include":"#comments"},{"match":"\\B(')((?:\\\\.)|.)(')","captures":{"1":{"name":"punctuation.definition.character.begin.hs"},"3":{"name":"punctuation.definition.character.end.hs"}},"name":"constant.character.hs","patterns":[{"match":"\\\\(?:x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)","name":"constant.character.escape.hs"}]},{"begin":"\"","beginCaptures":{"0":{"name":"punctuation.definition.string.begin.hs"}},"end":"\"","endCaptures":{"0":{"name":"punctuation.definition.string.end.hs"}},"name":"string.quoted.double.hs","patterns":[{"match":"\\\\(x\\h{2}|[0-2][0-7]{,2}|3[0-6][0-7]|37[0-7]?|[4-7][0-7]?|.)","name":"constant.character.escape.hs"}]},{"begin":"`(?=[a-z][a-zA-Z0-9#'_]*`)","end":"`","comment":"detect things like `function`","name":"meta.method.hs","patterns":[{"include":"#var_id"}]},{"include":"#numeric"},{"begin":"\\[","end":"\\]","name":"variable.other.array.hs","patterns":[{"include":"#numeric"},{"include":"#var_id"},{"include":"#class_id"},{"include":"#comments"}]},{"match":"\\*|\\*\\*|\\-|\\+\\+|\\+|\\!\\!|==|=|\\/|\\.|/=|<=|>=|=<<|>>|>>=|<|>|&&|\\|\\||\\?|\\:\\:|\\:","name":"keyword.operator.hs"},{"include":"#keywords"},{"match":",","name":"meta.delimiter.object.comma.hs"},{"begin":"^\\s*([a-z][a-zA-Z0-9']*)\\s*\\:\\:(?:\\s*(.*[^\\s])\\s*=>)?","beginCaptures":{"1":{"name":"entity.name.function.hs"},"2":{"name":"entity.name.type.hs"}},"end":"(\\->\\s*){0}\\n","patterns":[{"include":"#comments"},{"include":"#type_id"}]},{"match":"\\{|\\}","name":"meta.brace.curly.hs"},{"match":"\\(|\\)","name":"meta.brace.round.hs"},{"match":"\\[|\\]","name":"meta.brace.square.hs"},{"match":"\\A#!.*$","name":"comment.line.shebang.hs"},{"include":"#var_id"},{"include":"#type_id"},{"include":"#language_vars"}],"repository":{"comments":{"patterns":[{"begin":"--","beginCaptures":{"0":{"name":"punctuation.definition.comment.hs"}},"end":"\\n","name":"comment.line.double-dash.hs"},{"begin":"\\{\\-","beginCaptures":{"0":{"name":"punctuation.definition.comment.hs"}},"end":"\\-\\}","name":"comment.block.hs","patterns":[{"match":"s*(?<=#)s*((?!-}).)*","captures":{"0":{"name":"meta.preprocessor.macro.hs"}}}]}]},"language_vars":{"patterns":[{"match":"(?<=[\\s(\\[])_(?=[\\s)\\]])","name":"variable.language.underscore.hs"}]},"var_id":{"patterns":[{"match":"\\b[a-z][a-zA-Z0-9#'_]*","comment":"Type Variables also will match this pattern.","name":"variable.other.hs"}]},"type_id":{"patterns":[{"match":"\\b[A-Z][a-zA-Z0-9#'_]*","name":"storage.type.hs"}]},"numeric":{"patterns":[{"match":"\\b((0(x|X)[0-9a-fA-F]+)|(0(b|B)[01]+)|(0(o|O)[0-7]+)|([0-9]+(\\.[0-9]+)?)((e|E)[+-]?[0-9]+)?)\\b","name":"constant.numeric.hs"}]},"keywords":{"patterns":[{"match":"(?<!\\.)\\b(class|data|type|newtype)(?!\\s*:)\\b","name":"storage.type.hs"},{"match":"(?<!\\.)\\b(let)(?!\\s*:)\\b","name":"storage.modifier.hs"},{"match":"(?<!\\.)\\b(case|of|do|else|then|if|import|module|error|where|otherwise|default)(?!\\s*:)\\b","name":"keyword.control.hs"},{"match":"(?<!\\.)\\b(in|instance|infix|infixl|infixr)(?!\\s*:)\\b","name":"keyword.operator.hs"},{"match":"(?<!\\.)\\bTrue(?!\\s*:)\\b","name":"constant.language.boolean.true.hs"},{"match":"(?<!\\.)\\bFalse(?!\\s*:)\\b","name":"constant.language.boolean.false.hs"},{"match":"(?<!\\.)\\b(Nothing|Nil)(?!\\s*:)\\b","name":"constant.language.null.hs"}]}}}